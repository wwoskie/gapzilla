window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"gapzilla": {"fullname": "gapzilla", "modulename": "gapzilla", "kind": "module", "doc": "<p>A simple module to process a GenBank (gbk) file, identify and annotate RNA hairpins and insertion sites.</p>\n\n<h2 id=\"installation\"><strong>Installation</strong></h2>\n\n<h3 id=\"1-conda\"><strong>1. <code>conda</code></strong></h3>\n\n<p>Make sure you have your conda installed, conda env created and activated</p>\n\n<ul>\n<li><h4 id=\"from-pre-built-package\"><strong>From pre-built package</strong></h4>\n\n<p>The pre-built package is located at <code>conda-build</code> directory. To install from this source:</p>\n\n<ul>\n<li><p>Verify that current directory is gapzilla root directory (where <code>conda-recipe</code> folder and <code>README.md</code> are located)</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>&gt;&gt;&gt;<span class=\"w\"> </span>tree<span class=\"w\"> </span>-L<span class=\"w\"> </span><span class=\"m\">1</span>\n.\n\u251c\u2500\u2500<span class=\"w\"> </span>build\n\u251c\u2500\u2500<span class=\"w\"> </span>conda-build\n\u251c\u2500\u2500<span class=\"w\"> </span>conda-recipe\n\u251c\u2500\u2500<span class=\"w\"> </span>config.yaml\n\u251c\u2500\u2500<span class=\"w\"> </span>docs\n\u251c\u2500\u2500<span class=\"w\"> </span>documentation.html\n\u251c\u2500\u2500<span class=\"w\"> </span>examples.ipynb\n\u251c\u2500\u2500<span class=\"w\"> </span>gapzilla\n\u251c\u2500\u2500<span class=\"w\"> </span>gapzilla.egg-info\n\u251c\u2500\u2500<span class=\"w\"> </span>pyproject.toml\n\u251c\u2500\u2500<span class=\"w\"> </span>README.md\n\u2514\u2500\u2500<span class=\"w\"> </span>requirements.txt\n</code></pre>\n</div></li>\n<li><p>Run the following command:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>conda<span class=\"w\"> </span>install<span class=\"w\"> </span>gapzilla<span class=\"w\"> </span>-c<span class=\"w\"> </span>./conda-build<span class=\"w\">   </span>\n</code></pre>\n</div></li>\n</ul></li>\n\n<li><h4 id=\"using-conda-build\"><strong>Using <code>conda-build</code></strong></h4>\n\n<ul>\n<li><p><code>cd</code> into the root gapzilla folder.</p></li>\n<li><p>Run the following command:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>conda<span class=\"w\"> </span>build<span class=\"w\"> </span>conda-recipe\n</code></pre>\n</div></li>\n</ul>\n\n<hr />\n\n<p><strong>NOTE</strong></p>\n\n<p>Building process might take a while.</p>\n\n<hr />\n\n<ul>\n<li>After building process is complete, your output package will be saved locally somewhere in <code>~/anaconda/conda-bld/linux-64/</code></li>\n<li>To actually install package run:\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>conda<span class=\"w\"> </span>install<span class=\"w\"> </span>--use-local<span class=\"w\"> </span>gapzilla\n</code></pre>\n</div></li>\n</ul></li>\n</ul>\n\n<h3 id=\"2-pip\"><strong>2. <code>pip</code></strong></h3>\n\n<p>This type of installation can be very useful for those who are used to working with <a href=\"https://docs.python.org/3/library/venv.html\">python venv</a>. This package is not available in PyPI, so one have to make manual installation. </p>\n\n<ul>\n<li>First make sure you have your venv created and activated. </li>\n</ul>\n\n<ul>\n<li><p>Then <code>cd</code> into the root gapzilla folder (where <code>pyproject.toml</code> and <code>README.md</code> files are located).</p></li>\n<li><p>If you plan on editing source files of this repo, run:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip3<span class=\"w\"> </span>install<span class=\"w\"> </span>-e<span class=\"w\"> </span>.\n</code></pre>\n</div>\n\n<p>Otherwise:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip3<span class=\"w\"> </span>install<span class=\"w\"> </span>.\n</code></pre>\n</div>\n\n<p>The difference is that <code>-e</code> option <a href=\"https://stackoverflow.com/a/59667164/19559362\">provides a symbolic link</a> to this package in pip env, so that changes user makes here will immediately take effect on the package.</p>\n\n<hr />\n\n<p><strong>NOTE</strong></p>\n\n<p>It is possible to install package via <code>pip</code> into conda env. However, this might be <a href=\"https://www.anaconda.com/blog/using-pip-in-a-conda-environment\">not a very good idea</a> if you have a complicated conda env.</p>\n\n<hr /></li>\n</ul>\n\n<h3 id=\"3-appending-to-syspath\"><strong>3. Appending to <code>sys.path</code></strong></h3>\n\n<p>This method is the least preferred one and is usually used as a temporary solution. To make package visible in python one can append it to sys.path directly in python session by executing:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/gapzilla&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"usage\"><strong>Usage</strong></h2>\n\n<ul>\n<li><h3 id=\"cli\"><strong>CLI</strong></h3>\n\n<p>Command-line arguments are available via help message:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>&gt;&gt;&gt;<span class=\"w\"> </span>gapzilla<span class=\"w\"> </span>-h\nusage:<span class=\"w\"> </span>gapzilla<span class=\"w\"> </span><span class=\"o\">[</span>-h<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--output_file_name<span class=\"w\"> </span>OUTPUT_FILE_NAME<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--suffix_file_name<span class=\"w\"> </span>SUFFIX_FILE_NAME<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--path_to_output_folder<span class=\"w\"> </span>PATH_TO_OUTPUT_FOLDER<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--min_gap_length<span class=\"w\"> </span>MIN_GAP_LENGTH<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--max_gap_length<span class=\"w\"> </span>MAX_GAP_LENGTH<span class=\"o\">]</span>\n<span class=\"w\">                </span><span class=\"o\">[</span>--min_flanks_length<span class=\"w\"> </span>MIN_FLANKS_LENGTH<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--max_flanks_length<span class=\"w\"> </span>MAX_FLANKS_LENGTH<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--mfe_threshold_hpa<span class=\"w\"> </span>MFE_THRESHOLD_HPA<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--mfe_threshold_hpt<span class=\"w\"> </span>MFE_THRESHOLD_HPT<span class=\"o\">]</span>\n<span class=\"w\">                </span><span class=\"o\">[</span>--hairpin_similarity_thres<span class=\"w\"> </span>HAIRPIN_SIMILARITY_THRES<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--border_shift<span class=\"w\"> </span>BORDER_SHIFT<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--threads<span class=\"w\"> </span>THREADS<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--verbosity<span class=\"w\"> </span>VERBOSITY<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--avoid_plotting<span class=\"w\"> </span><span class=\"o\">[</span>N<span class=\"w\"> </span>...<span class=\"o\">]]</span><span class=\"w\"> </span><span class=\"o\">[</span>--custom_config<span class=\"w\"> </span>N<span class=\"o\">]</span>\n<span class=\"w\">                </span>path_to_gbk\n\nFind<span class=\"w\"> </span>RNA<span class=\"w\"> </span>hairpin-flanked<span class=\"w\"> </span>gaps<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>GBK<span class=\"w\"> </span>file<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>potential<span class=\"w\"> </span>insert<span class=\"w\"> </span>sites\n\npositional<span class=\"w\"> </span>arguments:\npath_to_gbk<span class=\"w\">           </span>Path<span class=\"w\"> </span>to<span class=\"w\"> </span>the<span class=\"w\"> </span>gbk<span class=\"w\"> </span>input<span class=\"w\"> </span>file\n\noptions:\n-h,<span class=\"w\"> </span>--help<span class=\"w\">            </span>show<span class=\"w\"> </span>this<span class=\"w\"> </span><span class=\"nb\">help</span><span class=\"w\"> </span>message<span class=\"w\"> </span>and<span class=\"w\"> </span><span class=\"nb\">exit</span>\n--output_file_name<span class=\"w\"> </span>OUTPUT_FILE_NAME,<span class=\"w\"> </span>-f<span class=\"w\"> </span>OUTPUT_FILE_NAME\n<span class=\"w\">                        </span>Output<span class=\"w\"> </span>file<span class=\"w\"> </span>name.<span class=\"w\"> </span>If<span class=\"w\"> </span>not<span class=\"w\"> </span>specified,<span class=\"w\"> </span>will<span class=\"w\"> </span>save<span class=\"w\"> </span>input<span class=\"w\"> </span>file<span class=\"w\"> </span>name<span class=\"w\"> </span>and<span class=\"w\"> </span>add<span class=\"w\"> </span>suffix<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"o\">)</span>\n--suffix_file_name<span class=\"w\"> </span>SUFFIX_FILE_NAME,<span class=\"w\"> </span>-s<span class=\"w\"> </span>SUFFIX_FILE_NAME\n<span class=\"w\">                        </span>Specify<span class=\"w\"> </span>filename<span class=\"w\"> </span>suffix<span class=\"w\"> </span>to<span class=\"w\"> </span>add<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span>output<span class=\"o\">)</span>\n--path_to_output_folder<span class=\"w\"> </span>PATH_TO_OUTPUT_FOLDER,<span class=\"w\"> </span>-o<span class=\"w\"> </span>PATH_TO_OUTPUT_FOLDER\n<span class=\"w\">                        </span>Path<span class=\"w\"> </span>to<span class=\"w\"> </span>the<span class=\"w\"> </span>gbk<span class=\"w\"> </span>output<span class=\"w\"> </span>folder<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"o\">)</span>\n--min_gap_length<span class=\"w\"> </span>MIN_GAP_LENGTH,<span class=\"w\"> </span>-min_gap<span class=\"w\"> </span>MIN_GAP_LENGTH\n<span class=\"w\">                        </span>Minimum<span class=\"w\"> </span>gap<span class=\"w\"> </span>length<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"o\">)</span>\n--max_gap_length<span class=\"w\"> </span>MAX_GAP_LENGTH,<span class=\"w\"> </span>-max_gap<span class=\"w\"> </span>MAX_GAP_LENGTH\n<span class=\"w\">                        </span>Maximum<span class=\"w\"> </span>gap<span class=\"w\"> </span>length<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"m\">150</span><span class=\"o\">)</span>\n--min_flanks_length<span class=\"w\"> </span>MIN_FLANKS_LENGTH,<span class=\"w\"> </span>-min_flanks<span class=\"w\"> </span>MIN_FLANKS_LENGTH\n<span class=\"w\">                        </span>Minimum<span class=\"w\"> </span>flanking<span class=\"w\"> </span>CDS<span class=\"w\"> </span>length<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"m\">700</span><span class=\"o\">)</span>\n--max_flanks_length<span class=\"w\"> </span>MAX_FLANKS_LENGTH,<span class=\"w\"> </span>-max_flanks<span class=\"w\"> </span>MAX_FLANKS_LENGTH\n<span class=\"w\">                        </span>Maximum<span class=\"w\"> </span>flanking<span class=\"w\"> </span>CDS<span class=\"w\"> </span>length<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"m\">10000000</span><span class=\"o\">)</span>\n--mfe_threshold_hpa<span class=\"w\"> </span>MFE_THRESHOLD_HPA,<span class=\"w\"> </span>-hpa<span class=\"w\"> </span>MFE_THRESHOLD_HPA\n<span class=\"w\">                        </span>MFE<span class=\"w\"> </span><span class=\"o\">(</span>minimal<span class=\"w\"> </span>free<span class=\"w\"> </span>energy<span class=\"o\">)</span><span class=\"w\"> </span>threshold<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>RNA<span class=\"w\"> </span>hairpins<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span>-7<span class=\"o\">)</span>\n--mfe_threshold_hpt<span class=\"w\"> </span>MFE_THRESHOLD_HPT,<span class=\"w\"> </span>-hpt<span class=\"w\"> </span>MFE_THRESHOLD_HPT\n<span class=\"w\">                        </span>MFE<span class=\"w\"> </span>threshold<span class=\"w\"> </span>to<span class=\"w\"> </span>filter<span class=\"w\"> </span>most<span class=\"w\"> </span>stable<span class=\"w\"> </span>RNA<span class=\"w\"> </span>hairpins<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span>-15<span class=\"o\">)</span>\n--hairpin_similarity_thres<span class=\"w\"> </span>HAIRPIN_SIMILARITY_THRES,<span class=\"w\"> </span>-similarity<span class=\"w\"> </span>HAIRPIN_SIMILARITY_THRES\n<span class=\"w\">                        </span>Threshold<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>filtering<span class=\"w\"> </span>similar<span class=\"w\"> </span>hairpins.<span class=\"w\"> </span>Lower<span class=\"w\"> </span>thres<span class=\"w\"> </span>-&gt;<span class=\"w\"> </span>more<span class=\"w\"> </span>hairpins<span class=\"w\"> </span>dropped<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"m\">0</span>.9<span class=\"o\">)</span>\n--border_shift<span class=\"w\"> </span>BORDER_SHIFT,<span class=\"w\"> </span>-bs<span class=\"w\"> </span>BORDER_SHIFT\n<span class=\"w\">                        </span>Distance<span class=\"w\"> </span>to<span class=\"w\"> </span>the<span class=\"w\"> </span>right<span class=\"w\"> </span>and<span class=\"w\"> </span>to<span class=\"w\"> </span>the<span class=\"w\"> </span>left<span class=\"w\"> </span>from<span class=\"w\"> </span>gap<span class=\"w\"> </span>to<span class=\"w\"> </span>search<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>haiirpins<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"m\">75</span><span class=\"o\">)</span>\n--threads<span class=\"w\"> </span>THREADS,<span class=\"w\"> </span>-t<span class=\"w\"> </span>THREADS\n<span class=\"w\">                        </span>Maximum<span class=\"w\"> </span>number<span class=\"w\"> </span>of<span class=\"w\"> </span>threads<span class=\"w\"> </span>to<span class=\"w\"> </span>use.<span class=\"w\"> </span>Takes<span class=\"w\"> </span>all<span class=\"w\"> </span>available<span class=\"w\"> </span>cores,<span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>not<span class=\"w\"> </span>specified<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"m\">8</span><span class=\"o\">)</span>\n--verbosity<span class=\"w\"> </span>VERBOSITY,<span class=\"w\"> </span>-v<span class=\"w\"> </span>VERBOSITY\n<span class=\"w\">                        </span>Specify<span class=\"w\"> </span>verbosity<span class=\"w\"> </span>of<span class=\"w\"> </span>output<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">0</span><span class=\"w\"> </span>-<span class=\"w\"> </span>silent,<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>-<span class=\"w\"> </span>max<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"o\">)</span>\n--avoid_plotting<span class=\"w\"> </span><span class=\"o\">[</span>N<span class=\"w\"> </span>...<span class=\"o\">]</span>,<span class=\"w\"> </span>-ap<span class=\"w\"> </span><span class=\"o\">[</span>N<span class=\"w\"> </span>...<span class=\"o\">]</span>\n<span class=\"w\">                        </span>Specify<span class=\"w\"> </span>instances<span class=\"w\"> </span>that<span class=\"w\"> </span>will<span class=\"w\"> </span>not<span class=\"w\"> </span>be<span class=\"w\"> </span>plotted.<span class=\"w\"> </span>Example<span class=\"w\"> </span>to<span class=\"w\"> </span>drop<span class=\"w\"> </span>hpa:<span class=\"w\"> </span>-ap<span class=\"w\"> </span>all_hairpins_f<span class=\"w\"> </span>all_hairpins_r.<span class=\"w\"> </span>Full<span class=\"w\"> </span>list<span class=\"w\"> </span>of<span class=\"w\"> </span>plottable<span class=\"w\"> </span>instances:<span class=\"w\"> </span>gaps,<span class=\"w\"> </span>top_hairpins_f,<span class=\"w\"> </span>top_hairpins_r,<span class=\"w\"> </span>all_hairpins_f,\n<span class=\"w\">                        </span>all_hairpins_r,<span class=\"w\"> </span>insertion_sites<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span><span class=\"o\">[])</span>\n--custom_config<span class=\"w\"> </span>N,<span class=\"w\"> </span>-cc<span class=\"w\"> </span>N\n<span class=\"w\">                        </span>Path<span class=\"w\"> </span>to<span class=\"w\"> </span>custom<span class=\"w\"> </span>yaml<span class=\"w\"> </span>config<span class=\"w\"> </span>file<span class=\"w\"> </span>that<span class=\"w\"> </span>will<span class=\"w\"> </span>override<span class=\"w\"> </span>defaults<span class=\"w\"> </span>and<span class=\"w\"> </span>any<span class=\"w\"> </span>other<span class=\"w\"> </span>commandline<span class=\"w\"> </span>args<span class=\"w\"> </span><span class=\"o\">(</span>default:<span class=\"w\"> </span>None<span class=\"o\">)</span>\n</code></pre>\n</div>\n\n<p>The only required argument is <code>path_to_gbk</code>. Arguments can also be passed via custom config .yaml file:</p>\n\n<h4 id=\"creating-custom-config-file\"><strong>Creating custom config file</strong></h4>\n\n<p>Default full config is a <code>.yaml</code> file with the following parameters:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">output_file_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;&#39;</span>\n<span class=\"nt\">path_to_output_folder</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;&#39;</span>\n<span class=\"nt\">suffix_file_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;output&quot;</span>\n<span class=\"nt\">min_gap_length</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0</span>\n<span class=\"nt\">max_gap_length</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">150</span>\n<span class=\"nt\">min_flanks_length</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">700</span>\n<span class=\"nt\">max_flanks_length</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">10000000</span>\n<span class=\"nt\">mfe_threshold_hpt</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">-15</span>\n<span class=\"nt\">mfe_threshold_hpa</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">-7</span>\n<span class=\"nt\">hairpin_similarity_thres</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.9</span><span class=\"w\"> </span><span class=\"c1\"># the lower it gets, the more hairpins will be dropped</span>\n<span class=\"nt\">border_shift</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">75</span><span class=\"w\"> </span><span class=\"c1\"># distance to the right and to the left from gap to look for hairpins</span>\n<span class=\"nt\">bar_format</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;{desc:&lt;50.100}</span><span class=\"nv\"> </span><span class=\"s\">{percentage:3.0f}%</span><span class=\"nv\"> </span><span class=\"s\">|{bar:100}{r_bar}&quot;</span><span class=\"w\"> </span><span class=\"c1\"># progress bar format</span>\n<span class=\"nt\">num_processes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">null</span><span class=\"w\"> </span><span class=\"c1\"># if not specified takes all available cpus</span>\n<span class=\"nt\">verbosity</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">1</span>\n<span class=\"nt\">avoid_plotting</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">null</span>\n</code></pre>\n</div>\n\n<p>It is possible to edit this config and create a custom one. Say, we would like to pass another <code>suffix_name</code>, MFE threshold for hpt (<code>mfe_threshold_hpt</code>) and not to plot <code>hpa</code> hairpins at all. The provided custom config then should look like this:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">suffix_file_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;res&quot;</span>\n<span class=\"nt\">mfe_threshold_hpt</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">-20</span>\n<span class=\"nt\">avoid_plotting</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;all_hairpins_f</span><span class=\"nv\"> </span><span class=\"s\">all_hairpins_r&quot;</span>\n</code></pre>\n</div></li>\n<li><h3 id=\"python-package\"><strong>Python package</strong></h3>\n\n<p>This package can also be imported as a regular python package. Some functions from this package may be useful in other projects too.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gapzilla</span> <span class=\"kn\">import</span> <span class=\"n\">process_gbk</span><span class=\"p\">,</span> <span class=\"n\">find_top_hairpins</span>\n</code></pre>\n</div></li>\n</ul>\n\n<h2 id=\"output\"><strong>Output</strong></h2>\n\n<p>Script outputs a .gbk file with additional annotations that include:</p>\n\n<ul>\n<li><code>gap</code>: intergenic gap, that meets required length and flankong regions lengths</li>\n<li><code>hpt</code>: most stable RNA hairpins detected</li>\n<li><code>hpa</code>: all other hairpins detected</li>\n<li><code>ins{n}</code>: possible insertion sites, where <code>n</code> is a score from 1 to 4. Score 4 can only be achieved when site is surrounded by 4 stable hairpins (<code>hpt</code>s): two on the left (forward and reverse) and two on the right.</li>\n</ul>\n\n<h2 id=\"requirements\"><strong>Requirements</strong></h2>\n\n<pre><code>python&gt;=3.10\nbiopython\npyyaml\ntqdm\nviennarna\n</code></pre>\n"}, "gapzilla.config": {"fullname": "gapzilla.config", "modulename": "gapzilla.config", "kind": "module", "doc": "<p>This submodule handles parsing data from config file and setting up logging.</p>\n"}, "gapzilla.config.OUTPUT_FILE_NAME": {"fullname": "gapzilla.config.OUTPUT_FILE_NAME", "modulename": "gapzilla.config", "qualname": "OUTPUT_FILE_NAME", "kind": "variable", "doc": "<p>Output file name. If not specified, will save input file name and add suffix</p>\n", "default_value": "&#x27;&#x27;"}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"fullname": "gapzilla.config.PATH_TO_OUTPUT_FOLDER", "modulename": "gapzilla.config", "qualname": "PATH_TO_OUTPUT_FOLDER", "kind": "variable", "doc": "<p>Path to the gbk output folder</p>\n", "default_value": "&#x27;&#x27;"}, "gapzilla.config.SUFFIX_FILE_NAME": {"fullname": "gapzilla.config.SUFFIX_FILE_NAME", "modulename": "gapzilla.config", "qualname": "SUFFIX_FILE_NAME", "kind": "variable", "doc": "<p>Specify filename suffix to add</p>\n", "default_value": "&#x27;output&#x27;"}, "gapzilla.config.MIN_GAP_LENGTH": {"fullname": "gapzilla.config.MIN_GAP_LENGTH", "modulename": "gapzilla.config", "qualname": "MIN_GAP_LENGTH", "kind": "variable", "doc": "<p>Minimum gap length</p>\n", "default_value": "0"}, "gapzilla.config.MAX_GAP_LENGTH": {"fullname": "gapzilla.config.MAX_GAP_LENGTH", "modulename": "gapzilla.config", "qualname": "MAX_GAP_LENGTH", "kind": "variable", "doc": "<p>Maximum gap length</p>\n", "default_value": "150"}, "gapzilla.config.MIN_FLANKS_LENGTH": {"fullname": "gapzilla.config.MIN_FLANKS_LENGTH", "modulename": "gapzilla.config", "qualname": "MIN_FLANKS_LENGTH", "kind": "variable", "doc": "<p>Minimum flanking CDS length</p>\n", "default_value": "700"}, "gapzilla.config.MAX_FLANKS_LENGTH": {"fullname": "gapzilla.config.MAX_FLANKS_LENGTH", "modulename": "gapzilla.config", "qualname": "MAX_FLANKS_LENGTH", "kind": "variable", "doc": "<p>Maximum flanking CDS length</p>\n", "default_value": "10000000"}, "gapzilla.config.MFE_THRESHOLD_HPA": {"fullname": "gapzilla.config.MFE_THRESHOLD_HPA", "modulename": "gapzilla.config", "qualname": "MFE_THRESHOLD_HPA", "kind": "variable", "doc": "<p>MFE (minimal free energy) threshold for RNA hairpins</p>\n", "default_value": "-7"}, "gapzilla.config.MFE_THRESHOLD_HPT": {"fullname": "gapzilla.config.MFE_THRESHOLD_HPT", "modulename": "gapzilla.config", "qualname": "MFE_THRESHOLD_HPT", "kind": "variable", "doc": "<p>MFE threshold to filter most stable RNA hairpins</p>\n", "default_value": "-15"}, "gapzilla.config.BORDER_SHIFT": {"fullname": "gapzilla.config.BORDER_SHIFT", "modulename": "gapzilla.config", "qualname": "BORDER_SHIFT", "kind": "variable", "doc": "<p>Distance to the right and to the left from gap to search for hairpins</p>\n", "default_value": "75"}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"fullname": "gapzilla.config.HAIRPIN_SIMILARITY_THRES", "modulename": "gapzilla.config", "qualname": "HAIRPIN_SIMILARITY_THRES", "kind": "variable", "doc": "<p>Threshold for filtering similar hairpins. Lower thres -> more hairpins dropped</p>\n", "default_value": "0.9"}, "gapzilla.config.AVOID_PLOTTING": {"fullname": "gapzilla.config.AVOID_PLOTTING", "modulename": "gapzilla.config", "qualname": "AVOID_PLOTTING", "kind": "variable", "doc": "<p>Specify instances that will not be plotted. Example to drop hpa: -ap all_hairpins_f all_hairpins_r. Full list of plottable instances: gaps, top_hairpins_f, top_hairpins_r, all_hairpins_f, all_hairpins_r, insertion_sites</p>\n", "default_value": "[]"}, "gapzilla.config.NUM_PROCESSES": {"fullname": "gapzilla.config.NUM_PROCESSES", "modulename": "gapzilla.config", "qualname": "NUM_PROCESSES", "kind": "variable", "doc": "<p>Maximum number of threads to use. Takes all available cores, if not specified</p>\n", "default_value": "8"}, "gapzilla.config.VERBOSITY": {"fullname": "gapzilla.config.VERBOSITY", "modulename": "gapzilla.config", "qualname": "VERBOSITY", "kind": "variable", "doc": "<p>Specify verbosity of output (0 - silent, 1 - max)</p>\n", "default_value": "1"}, "gapzilla.config.BAR_FORMAT": {"fullname": "gapzilla.config.BAR_FORMAT", "modulename": "gapzilla.config", "qualname": "BAR_FORMAT", "kind": "variable", "doc": "<p>Format of the progress bar for tqdm module.</p>\n", "default_value": "&#x27;{desc:&lt;50.100} {percentage:3.0f}% |{bar:100}{r_bar}&#x27;"}, "gapzilla.config.setup_logging": {"fullname": "gapzilla.config.setup_logging", "modulename": "gapzilla.config", "qualname": "setup_logging", "kind": "function", "doc": "<p>Configures the logging settings based on the provided verbosity level.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>verbosity</strong> (int):\nThe verbosity level for logging. The levels are defined as:\n<ul>\n<li>0: ERROR level, only error messages will be logged.</li>\n<li>1: INFO level, informational messages and above will be logged.</li>\n<li>2 or higher: DEBUG level, all messages including debugging details will be logged.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This function sets up the logging configuration with a simple message format and adjusts the logging\nlevel according to the verbosity parameter. If an invalid verbosity level is provided, it defaults to\nWARNING level.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">verbosity</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "gapzilla.feature_processing": {"fullname": "gapzilla.feature_processing", "modulename": "gapzilla.feature_processing", "kind": "module", "doc": "<p>Functions to transform data to biopython-acceptable <code>SeqRecord</code> format for .gbk files.</p>\n"}, "gapzilla.feature_processing.create_hairpins_feature": {"fullname": "gapzilla.feature_processing.create_hairpins_feature", "modulename": "gapzilla.feature_processing", "qualname": "create_hairpins_feature", "kind": "function", "doc": "<p>Create a list of SeqFeature objects from a list of Hairpin objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hairpins</strong> (list of Hairpin):\nA list of Hairpin objects, each containing information about a hairpin structure.</li>\n<li><strong>type_of_hairpin</strong> (str):\nA string representing the type of hairpin: <code>hpa</code> or <code>hpt</code>.</li>\n<li><strong>complement</strong> (bool, optional):\nIf True, the strand will be set to -1 (complementary strand). If False or None, the strand will be set to 1 (forward strand).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of SeqFeature</strong>: A list of SeqFeature objects, each representing a hairpin with associated metadata.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hairpins</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">type_of_hairpin</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">complement</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Bio</span><span class=\"o\">.</span><span class=\"n\">SeqFeature</span><span class=\"o\">.</span><span class=\"n\">SeqFeature</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"fullname": "gapzilla.feature_processing.create_uncovered_intervals_feature", "modulename": "gapzilla.feature_processing", "qualname": "create_uncovered_intervals_feature", "kind": "function", "doc": "<p>Create a list of SeqFeature objects representing uncovered intervals.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>intervals</strong> (list of IntervaledGap):\nA list of IntervaledGap objects, each representing an interval with a start and end position.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of SeqFeature</strong>: A list of SeqFeature objects, each corresponding to an interval from the input list.\nEach SeqFeature has a FeatureLocation with the start and end positions of the interval,\na type of \"gap\", and a qualifier with a label \"gap\".</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">intervals</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledGap</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Bio</span><span class=\"o\">.</span><span class=\"n\">SeqFeature</span><span class=\"o\">.</span><span class=\"n\">SeqFeature</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.feature_processing.create_insertion_sites_feature": {"fullname": "gapzilla.feature_processing.create_insertion_sites_feature", "modulename": "gapzilla.feature_processing", "qualname": "create_insertion_sites_feature", "kind": "function", "doc": "<p>Create a list of sequence features from insertion sites.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>insertion_sites</strong> (list of InsertionSite):\nA list of <code>InsertionSite</code> objects representing the insertion sites.\nEach <code>InsertionSite</code> object should have <code>start</code>, <code>end</code>, and <code>score</code>\nattributes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of SeqFeature</strong>: A list of <code>SeqFeature</code> objects created from the given insertion sites.\nEach <code>SeqFeature</code> object will have a <code>FeatureLocation</code> from <code>start</code> to\n<code>end</code> with a strand of 1, and qualifiers containing the <code>score</code> of the\ninsertion site and a <code>label</code> in the format of \"ins<score>\".</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">insertion_sites</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">InsertionSite</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Bio</span><span class=\"o\">.</span><span class=\"n\">SeqFeature</span><span class=\"o\">.</span><span class=\"n\">SeqFeature</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.file_processing": {"fullname": "gapzilla.file_processing", "modulename": "gapzilla.file_processing", "kind": "module", "doc": "<p>Functions to manipulate files and directories.</p>\n"}, "gapzilla.file_processing.create_dirs_to_output": {"fullname": "gapzilla.file_processing.create_dirs_to_output", "modulename": "gapzilla.file_processing", "qualname": "create_dirs_to_output", "kind": "function", "doc": "<p>Create directories to the specified output path if they do not already exist.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_to_dirs</strong> (str or os.PathLike):\nThe path to the directory or directories that need to be created. This\ncan be provided as a string or an <code>os.PathLike</code> object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path_to_dirs</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "gapzilla.file_processing.create_output_path": {"fullname": "gapzilla.file_processing.create_output_path", "modulename": "gapzilla.file_processing", "qualname": "create_output_path", "kind": "function", "doc": "<p>Create an output path based on the input path, output file name, output folder,\nand an optional suffix for the file name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>input_path</strong> (str or os.PathLike):\nThe path of the input file which serves as a basis for deriving the\noutput path.</li>\n<li><strong>output_file_name</strong> (str):\nThe name of the output file. If not provided, the name will be derived\nfrom the <code>input_path</code> filename and the <code>suffix_file_name</code>.</li>\n<li><strong>path_to_output_folder</strong> (str or os.PathLike):\nThe directory where the output file should be saved. If not provided,\nthe directory of the <code>input_path</code> will be used. If doesn't exits will be created.</li>\n<li><strong>suffix_file_name</strong> (str, optional):\nThe suffix to append to the file name if <code>output_file_name</code> is not\nprovided. Default is \"output\".</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str or os.PathLike</strong>: The complete path where the output file should be saved.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span>,</span><span class=\"param\">\t<span class=\"n\">output_file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">path_to_output_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span>,</span><span class=\"param\">\t<span class=\"n\">suffix_file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;output&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span>:</span></span>", "funcdef": "def"}, "gapzilla.file_processing.modify_first_line": {"fullname": "gapzilla.file_processing.modify_first_line", "modulename": "gapzilla.file_processing", "qualname": "modify_first_line", "kind": "function", "doc": "<p>Modify the first line of a file if it contains the keyword \"LOCUS\" and\nsave the modified content to a new file. This function fixes PROKKA invalid output.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>input_path</strong> (str or os.PathLike):\nThe path to the input file whose content is to be modified.</li>\n<li><strong>output_path</strong> (str or os.PathLike):\nThe path to the output file where the modified content will be saved.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This function reads the entire content of the input file into a list of\nlines.</li>\n<li>If the first line of the file contains the keyword \"LOCUS\" and the text \"bp\",\nthe function inserts \"0 \" before \"bp\" in the first line.</li>\n<li>The modified content is then written to the output file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span>, </span><span class=\"param\"><span class=\"n\">output_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "gapzilla.file_processing.uniquify_path": {"fullname": "gapzilla.file_processing.uniquify_path", "modulename": "gapzilla.file_processing", "qualname": "uniquify_path", "kind": "function", "doc": "<p>Generate a unique file path by appending a counter to the file name if a file with\nthe given path already exists.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str or os.PathLike):\nThe initial file path that needs to be uniquified.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str or os.PathLike</strong>: A unique file path with a counter appended if the original path already exists.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span>:</span></span>", "funcdef": "def"}, "gapzilla.gbk_processing": {"fullname": "gapzilla.gbk_processing", "modulename": "gapzilla.gbk_processing", "kind": "module", "doc": "<p>Module to process GenBank (gbk) file to identify and annotate RNA hairpins and insertion sites.</p>\n"}, "gapzilla.gbk_processing.process_gbk": {"fullname": "gapzilla.gbk_processing.process_gbk", "modulename": "gapzilla.gbk_processing", "qualname": "process_gbk", "kind": "function", "doc": "<p>Process a GenBank (gbk) file to identify and annotate RNA hairpins and insertion sites.</p>\n\n<p>This function reads a GenBank file, identifies gaps between annotated features,\nfilters these gaps based on provided criteria, and then searches for RNA hairpins\nwithin these gaps and in nearby regions according to the provided border shift. The identified hairpins and insertion sites are then annotated\nback into the GenBank file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path_to_gbk</strong> (str or os.PathLike):\nPath to the input GenBank file.</li>\n<li><strong>output_file_name</strong> (str, optional):\nName of the output file. If not provided, a default name will be generated.</li>\n<li><strong>path_to_output_folder</strong> (str or os.PathLike, optional):\nPath to the folder where the output file will be saved. If not provided, the\noutput file will be saved in the same directory as the input file.</li>\n<li><strong>suffix_file_name</strong> (str, optional):\nSuffix to append to the output file name. Default is \"output\".</li>\n<li><strong>min_gap_length</strong> (int, optional):\nMinimum length of gaps to consider. Default is 0.</li>\n<li><strong>max_gap_length</strong> (int, optional):\nMaximum length of gaps to consider. Default is 150.</li>\n<li><strong>min_flanks_length</strong> (int, optional):\nMinimum length of flanking regions around gaps. Default is 700.</li>\n<li><strong>max_flanks_length</strong> (int, optional):\nMaximum length of flanking regions around gaps. Default is 1e6.</li>\n<li><strong>mfe_threshold_hpa</strong> (float, optional):\nMinimum free energy threshold for hairpin acceptance. Default is -7.</li>\n<li><strong>mfe_threshold_hpt</strong> (float, optional):\nMinimum free energy threshold for hairpin truncation. Default is -15.</li>\n<li><strong>hairpin_similarity_thres</strong> (float, optional):\nSimilarity threshold for hairpin filtering. Default is 0.9.</li>\n<li><strong>border_shift</strong> (int, optional):\nNumber of nucleotides to shift borders when splitting sequences. Default is 75.</li>\n<li><strong>num_processes</strong> (int, optional):\nNumber of processes to use for parallel computation. Default is 2.</li>\n<li><strong>verbosity</strong> (int, optional):\nVerbosity level for logging. Default is 0.</li>\n<li><strong>avoid_plotting</strong> (list of str or None, optional):\nList of feature types to avoid plotting. Default is an empty list.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong>: The function writes the annotated GenBank file to the specified output path.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path_to_gbk</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span>,</span><span class=\"param\">\t<span class=\"n\">output_file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">path_to_output_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix_file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;output&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">min_gap_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">max_gap_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">150</span>,</span><span class=\"param\">\t<span class=\"n\">min_flanks_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">700</span>,</span><span class=\"param\">\t<span class=\"n\">max_flanks_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">1000000.0</span>,</span><span class=\"param\">\t<span class=\"n\">mfe_threshold_hpa</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">7</span>,</span><span class=\"param\">\t<span class=\"n\">mfe_threshold_hpt</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">15</span>,</span><span class=\"param\">\t<span class=\"n\">hairpin_similarity_thres</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span>,</span><span class=\"param\">\t<span class=\"n\">border_shift</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">75</span>,</span><span class=\"param\">\t<span class=\"n\">num_processes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">verbosity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">avoid_plotting</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "gapzilla.hairpin_processing": {"fullname": "gapzilla.hairpin_processing", "modulename": "gapzilla.hairpin_processing", "kind": "module", "doc": "<p>Funtions to find, filter and merge RNA-hairpins</p>\n"}, "gapzilla.hairpin_processing.find_hairpins": {"fullname": "gapzilla.hairpin_processing.find_hairpins", "modulename": "gapzilla.hairpin_processing", "qualname": "find_hairpins", "kind": "function", "doc": "<p>Find hairpin structures in a given RNA secondary structure.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>sequence</strong> (str or Seq):\nThe RNA sequence corresponding to the secondary structure.</li>\n<li><strong>structure</strong> (str):\nThe RNA secondary structure in dot-bracket notation.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of Hairpin</strong>: A list of <code>Hairpin</code> objects representing the hairpin structures found in\nthe given sequence and structure. Each <code>Hairpin</code> contains the start and end\nindices, the hairpin sequence, and the hairpin structure.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>The function scans through the <code>structure</code> string using a stack to identify\nmatching parentheses, which indicate hairpin loops.</li>\n<li>A hairpin is considered valid if the distance between the matched parentheses\nis greater than 3 nucleotides.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">Bio</span><span class=\"o\">.</span><span class=\"n\">Seq</span><span class=\"o\">.</span><span class=\"n\">Seq</span>,</span><span class=\"param\">\t<span class=\"n\">structure</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.hairpin_processing.evaluate_hairpins": {"fullname": "gapzilla.hairpin_processing.evaluate_hairpins", "modulename": "gapzilla.hairpin_processing", "qualname": "evaluate_hairpins", "kind": "function", "doc": "<p>Evaluate the minimum free energy (MFE) of a list of hairpin structures.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hairpins</strong> (list of Hairpin):\nA list of <code>Hairpin</code> objects to be evaluated. Each <code>Hairpin</code> should have\na <code>sequence</code> and <code>structure</code> attribute representing the hairpin's\nsequence and secondary structure, respectively.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of Hairpin</strong>: A list of <code>Hairpin</code> objects with the <code>mfe</code> attribute set to the calculated\nminimum free energy of the hairpin's secondary structure.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hairpins</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"fullname": "gapzilla.hairpin_processing.merge_similar_hairpins", "modulename": "gapzilla.hairpin_processing", "qualname": "merge_similar_hairpins", "kind": "function", "doc": "<p>Merge similar hairpin structures based on their overlap.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hairpins</strong> (list of Hairpin):\nA list of <code>Hairpin</code> objects to be merged. Each <code>Hairpin</code> should have\nattributes like <code>start</code>, <code>end</code>, <code>sequence</code>, <code>structure</code>, and <code>mfe</code>.</li>\n<li><strong>overlap_threshold</strong> (float, optional):\nThe threshold for considering two hairpins as overlapping. Default is 0.9.</li>\n<li><strong>backward_search_thres</strong> (int, optional):\nThe number of recent hairpins to search backward for overlapping. Default\nis 20.</li>\n<li><strong>message</strong> (str, optional):\nThe message to display on the progress bar. Default is \"Merging similar hairpins...\".</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of Hairpin</strong>: A list of <code>Hairpin</code> objects with similar and overlapping hairpins merged.\nIn case of overlap, the hairpin with the lower minimum free energy (MFE)\nis retained.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>The function sorts the list of hairpins by their start and end positions.</li>\n<li>It uses a sliding window approach to check for overlap within a specified\nnumber of recent hairpins.</li>\n<li>When overlapping hairpins are found, it retains the one with the lower MFE\nand discards the other.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hairpins</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">overlap_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span>,</span><span class=\"param\">\t<span class=\"n\">backward_search_thres</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Merging similar hairpins...&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.hairpin_processing.process_window": {"fullname": "gapzilla.hairpin_processing.process_window", "modulename": "gapzilla.hairpin_processing", "qualname": "process_window", "kind": "function", "doc": "<p>Process a sliding window on a sequence to find and evaluate hairpin structures.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>args</strong> (tuple of (str, int, int)):\nA tuple containing the sequence, window size, and start position.\n<ul>\n<li>sequence: The RNA sequence to be processed.</li>\n<li>window_size: The size of the window to slide over the sequence.</li>\n<li>start: The starting position of the window on the sequence.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of Hairpin</strong>: A list of <code>Hairpin</code> objects found and evaluated within the given window.\nEach hairpin's start and end positions are adjusted to the original\nsequence coordinates.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>The function extracts a subsequence of the given window size starting\nfrom the provided start position.</li>\n<li>RNA folding is performed on the window sequence to predict its secondary\nstructure and minimum free energy (MFE).</li>\n<li>Hairpin structures are identified within the window sequence and evaluated\nfor their MFE.</li>\n<li>The start and end positions of each identified hairpin are adjusted to match\nthe original sequence coordinates.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.hairpin_processing.find_top_hairpins": {"fullname": "gapzilla.hairpin_processing.find_top_hairpins", "modulename": "gapzilla.hairpin_processing", "qualname": "find_top_hairpins", "kind": "function", "doc": "<p>Find and evaluate top hairpin structures in an RNA sequence using a sliding window approach.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>sequence</strong> (str or Seq):\nThe RNA sequence to be analyzed for hairpin structures.</li>\n<li><strong>window_size</strong> (int, optional):\nThe size of the window to slide over the sequence. Default is 50.</li>\n<li><strong>step_size</strong> (int, optional):\nThe step size for the sliding window. Default is 25.</li>\n<li><strong>mfe_threshold_hpt</strong> (float, optional):\nThe threshold for minimum free energy (MFE) to classify hairpins as\n'top' hairpins. Default is -15.0.</li>\n<li><strong>mfe_threshold_hpa</strong> (float, optional):\nThe threshold for MFE to filter hairpins after merging similar ones.\nDefault is -1.</li>\n<li><strong>num_processes</strong> (int, optional):\nThe number of processes to use for parallel processing. Default is the\nnumber of CPU cores available.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tuple of (list of Hairpin, list of Hairpin)</strong>: - filtered_hairpins: A list of 'top' Hairpin objects that meet the MFE\nthreshold specified by <code>mfe_threshold_hpt</code>.\n<ul>\n<li>all_hairpins: A list of remaining Hairpin objects after filtering out\nthe 'top' hairpins.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>The function uses a sliding window approach to scan the sequence for hairpin\nstructures. The windows are processed in parallel using multiple processes.</li>\n<li>RNA folding is performed within each window to predict secondary structures\nand evaluate their MFE.</li>\n<li>Similar hairpins within the sequence are merged.</li>\n<li>Hairpins are filtered based on their MFE, and those meeting the 'top' MFE\nthreshold are separated from the remaining hairpins.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">Bio</span><span class=\"o\">.</span><span class=\"n\">Seq</span><span class=\"o\">.</span><span class=\"n\">Seq</span>,</span><span class=\"param\">\t<span class=\"n\">window_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">step_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">25</span>,</span><span class=\"param\">\t<span class=\"n\">mfe_threshold_hpt</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">15.0</span>,</span><span class=\"param\">\t<span class=\"n\">mfe_threshold_hpa</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_processes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"fullname": "gapzilla.hairpin_processing.find_hairpins_in_subseqs", "modulename": "gapzilla.hairpin_processing", "qualname": "find_hairpins_in_subseqs", "kind": "function", "doc": "<p>Find and evaluate hairpin structures in multiple RNA subsequences.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>subsequences</strong> (list of str or Seq):\nA list of RNA subsequences, each represented as a string or Seq object.</li>\n<li><strong>mfe_threshold_hpt</strong> (float):\nThe threshold for minimum free energy (MFE) to classify hairpins as 'top'\nhairpins.</li>\n<li><strong>mfe_threshold_hpa</strong> (float):\nThe threshold for MFE to filter hairpins after merging similar ones.</li>\n<li><strong>num_processes</strong> (int, optional):\nThe number of processes to use for parallel processing. Default is the\nnumber of CPU cores available.</li>\n<li><strong>overlap_threshold</strong> (float, optional):\nThe threshold for considering two hairpins as overlapping. Default is 0.9.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tuple of (list of Hairpin, list of Hairpin)</strong>: - top_hairpins: A list of 'top' Hairpin objects that meet the MFE threshold\nspecified by <code>mfe_threshold_hpt</code>.\n<ul>\n<li>all_hairpins: A list of remaining Hairpin objects after filtering out the\n'top' hairpins and merging similar hairpins.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>The function processes each subsequence to find and evaluate hairpin structures\nusing parallel processing.</li>\n<li>RNA folding is performed within each subsequence, and hairpins are evaluated\nbased on their MFE.</li>\n<li>The start and end positions of each identified hairpin are adjusted to match the\noriginal sequence coordinates of the subsequences.</li>\n<li>Similar hairpins within each subsequence are merged.</li>\n<li>Finally, hairpins are filtered based on their MFE, and those meeting the 'top'\nMFE threshold are separated from the remaining hairpins.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">subsequences</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">Bio</span><span class=\"o\">.</span><span class=\"n\">Seq</span><span class=\"o\">.</span><span class=\"n\">Seq</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">mfe_threshold_hpt</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">mfe_threshold_hpa</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">num_processes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">overlap_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "gapzilla.insertion_processing": {"fullname": "gapzilla.insertion_processing", "modulename": "gapzilla.insertion_processing", "kind": "module", "doc": "<p>Functions to create and handle insertion sites</p>\n"}, "gapzilla.insertion_processing.find_insertion_sites": {"fullname": "gapzilla.insertion_processing.find_insertion_sites", "modulename": "gapzilla.insertion_processing", "qualname": "find_insertion_sites", "kind": "function", "doc": "<p>Identify potential insertion sites in gaps not covered by hairpin structures.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>gaps</strong> (list of IntervaledGap):\nA list of <code>IntervaledGap</code> objects representing gaps in the genome.\nEach <code>IntervaledGap</code> should have <code>start</code> and <code>end</code> attributes.</li>\n<li><strong>coverages</strong> (list of Hairpin):\nA list of <code>Hairpin</code> objects representing regions covered by hairpin structures.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of InsertionSite</strong>: A list of <code>InsertionSite</code> objects representing potential insertion sites.\nEach <code>InsertionSite</code> includes <code>start</code>, <code>end</code>, and <code>score</code> to indicate\nthe insertion site's position and its score based on neighbouring <code>hpt</code> regions.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gaps</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledGap</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">coverages</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Hairpin</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">InsertionSite</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"fullname": "gapzilla.insertion_processing.find_overlapping_insertion_sites", "modulename": "gapzilla.insertion_processing", "qualname": "find_overlapping_insertion_sites", "kind": "function", "doc": "<p>Identify overlapping insertion sites and calculate their cumulative scores.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>insertion_sites</strong> (list of InsertionSite):\nA list of <code>InsertionSite</code> objects representing potential insertion sites.\nEach <code>InsertionSite</code> should have <code>start</code>, <code>end</code>, and <code>score</code> attributes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of InsertionSite</strong>: A list of <code>InsertionSite</code> objects, including the original and newly created\noverlapping insertion sites with cumulative scores.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">insertion_sites</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">InsertionSite</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">InsertionSite</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.interval_processing": {"fullname": "gapzilla.interval_processing", "modulename": "gapzilla.interval_processing", "kind": "module", "doc": "<p>Functions to process intervals and gaps</p>\n"}, "gapzilla.interval_processing.split_sequence": {"fullname": "gapzilla.interval_processing.split_sequence", "modulename": "gapzilla.interval_processing", "qualname": "split_sequence", "kind": "function", "doc": "<p>Split the given sequence based on intervals and a specified border shift.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>sequence</strong> (Seq or str):\nThe sequence to be split.</li>\n<li><strong>gaps</strong> (IntervaledGap):\nAn iterable containing gap intervals with <code>start</code> and <code>end</code> attributes.</li>\n<li><strong>border_shift</strong> (int, optional):\nThe number of positions to extend the borders of each gap interval. Default is 75.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of Seq or str</strong>: A list of subsequences extracted from the original sequence, each extended by the border shift value.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">Bio</span><span class=\"o\">.</span><span class=\"n\">Seq</span><span class=\"o\">.</span><span class=\"n\">Seq</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">gaps</span><span class=\"p\">:</span> <span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledGap</span>,</span><span class=\"param\">\t<span class=\"n\">border_shift</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">75</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Bio</span><span class=\"o\">.</span><span class=\"n\">Seq</span><span class=\"o\">.</span><span class=\"n\">Seq</span> <span class=\"o\">|</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.interval_processing.merge_intervals": {"fullname": "gapzilla.interval_processing.merge_intervals", "modulename": "gapzilla.interval_processing", "qualname": "merge_intervals", "kind": "function", "doc": "<p>Merge overlapping intervals from a list of intervaled features.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>intervaled_features</strong> (list of IntervaledFeature):\nA list of intervaled features to be merged. Each feature must have <code>start</code> and <code>end</code> attributes,\nas well as <code>feature_list</code>, <code>feature_num</code>, and <code>feature_lengths</code> attributes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of IntervaledFeature</strong>: A list of merged intervaled features with updated attributes including combined feature lists,\ncounts, and lengths.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">intervaled_features</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledFeature</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledFeature</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.interval_processing.find_uncovered_intervals": {"fullname": "gapzilla.interval_processing.find_uncovered_intervals", "modulename": "gapzilla.interval_processing", "qualname": "find_uncovered_intervals", "kind": "function", "doc": "<p>Identify intervals within a specified range that are not covered by given features.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>start</strong> (int):\nThe start position of the interested range.</li>\n<li><strong>end</strong> (int):\nThe end position of the interested range.</li>\n<li><strong>intervaled_features</strong> (list of IntervaledFeature):\nA list of intervaled features, each having <code>start</code> and <code>end</code> attributes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of IntervaledGap</strong>: A list of uncovered intervals, each represented as an <code>IntervaledGap</code> object.\nEach gap object includes information about the interval and any adjacent features on the left and right.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">intervaled_features</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledFeature</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledGap</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.interval_processing.filter_intervals_by_length": {"fullname": "gapzilla.interval_processing.filter_intervals_by_length", "modulename": "gapzilla.interval_processing", "qualname": "filter_intervals_by_length", "kind": "function", "doc": "<p>Filter a list of intervaled gaps based on specified minimum and maximum lengths.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>intervals</strong> (list of IntervaledGap):\nA list of intervaled gaps, each with <code>start</code> and <code>end</code> attributes.</li>\n<li><strong>min_length</strong> (int):\nThe minimum length an interval must have to be included in the output.</li>\n<li><strong>max_length</strong> (int):\nThe maximum length an interval can have to be included in the output.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of IntervaledGap</strong>: A list of intervaled gaps that satisfy the specified length constraints.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">intervals</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledGap</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">min_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">max_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledGap</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"fullname": "gapzilla.interval_processing.filter_intervals_by_flanking_legth", "modulename": "gapzilla.interval_processing", "qualname": "filter_intervals_by_flanking_legth", "kind": "function", "doc": "<p>Filter a list of intervaled gaps based on the lengths of their flanking features.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>intervals</strong> (list of IntervaledGap):\nA list of intervaled gaps, each potentially having <code>features_left</code> and <code>features_right</code> attributes.</li>\n<li><strong>min_flanks_length</strong> (int):\nThe minimum length a flanking feature must have for the gap to be included.</li>\n<li><strong>max_flanks_length</strong> (int):\nThe maximum length a flanking feature can have for the gap to be included.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of IntervaledGap</strong>: A list of intervaled gaps where both flanking features fall within the specified length constraints.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">intervals</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">gapzilla</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntervaledGap</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">min_flanks_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">max_flanks_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "gapzilla.main": {"fullname": "gapzilla.main", "modulename": "gapzilla.main", "kind": "module", "doc": "<p>This module handles CLI behaviour of the module. It takes constants from config file and processes parameters from command line arguments or custom config file and then invokes <code>process_gbk</code> function from gbk_processing.py</p>\n"}, "gapzilla.main.main": {"fullname": "gapzilla.main.main", "modulename": "gapzilla.main", "qualname": "main", "kind": "function", "doc": "<p>Parses command line input and invokes <code>process_gbk()</code> function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "gapzilla.models": {"fullname": "gapzilla.models", "modulename": "gapzilla.models", "kind": "module", "doc": "<p>Data models (dataclasses) used in module</p>\n"}, "gapzilla.models.IntervaledFeature": {"fullname": "gapzilla.models.IntervaledFeature", "modulename": "gapzilla.models", "qualname": "IntervaledFeature", "kind": "class", "doc": "<p>A class to represent a genomic interval with features.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>start</strong> (int):\nStart position on the genome.</li>\n<li><strong>end</strong> (int):\nEnd position on the genome.</li>\n<li><strong>feature_list</strong> (list of SeqFeature):\nList of features within the interval.</li>\n<li><strong>feature_num</strong> (int):\nNumber of features within the interval.</li>\n<li><strong>feature_lengths</strong> (list of int):\nList of lengths of the features within the interval.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>start</strong> (int):\nStart position on the genome.</li>\n<li><strong>end</strong> (int):\nEnd position on the genome.</li>\n<li><strong>feature</strong> (SeqFeature):\nInitial feature, removed after class instance creation.</li>\n</ul>\n"}, "gapzilla.models.IntervaledFeature.__init__": {"fullname": "gapzilla.models.IntervaledFeature.__init__", "modulename": "gapzilla.models", "qualname": "IntervaledFeature.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">feature</span><span class=\"p\">:</span> <span class=\"n\">dataclasses</span><span class=\"o\">.</span><span class=\"n\">InitVar</span><span class=\"p\">[</span><span class=\"n\">SeqFeature</span><span class=\"p\">]</span></span>)</span>"}, "gapzilla.models.IntervaledFeature.start": {"fullname": "gapzilla.models.IntervaledFeature.start", "modulename": "gapzilla.models", "qualname": "IntervaledFeature.start", "kind": "variable", "doc": "<p>Start position on the genome</p>\n", "annotation": ": int"}, "gapzilla.models.IntervaledFeature.end": {"fullname": "gapzilla.models.IntervaledFeature.end", "modulename": "gapzilla.models", "qualname": "IntervaledFeature.end", "kind": "variable", "doc": "<p>End position on the genome</p>\n", "annotation": ": int"}, "gapzilla.models.IntervaledFeature.feature": {"fullname": "gapzilla.models.IntervaledFeature.feature", "modulename": "gapzilla.models", "qualname": "IntervaledFeature.feature", "kind": "variable", "doc": "<p>Initial feature, removed after class instance creation</p>\n", "annotation": ": dataclasses.InitVar[SeqFeature]"}, "gapzilla.models.IntervaledFeature.feature_list": {"fullname": "gapzilla.models.IntervaledFeature.feature_list", "modulename": "gapzilla.models", "qualname": "IntervaledFeature.feature_list", "kind": "variable", "doc": "<p>List of features</p>\n", "annotation": ": list[Bio.SeqFeature.SeqFeature]"}, "gapzilla.models.IntervaledFeature.feature_num": {"fullname": "gapzilla.models.IntervaledFeature.feature_num", "modulename": "gapzilla.models", "qualname": "IntervaledFeature.feature_num", "kind": "variable", "doc": "<p>Number of features</p>\n", "annotation": ": int"}, "gapzilla.models.IntervaledFeature.feature_lengths": {"fullname": "gapzilla.models.IntervaledFeature.feature_lengths", "modulename": "gapzilla.models", "qualname": "IntervaledFeature.feature_lengths", "kind": "variable", "doc": "<p>list of features lengths</p>\n", "annotation": ": list[int]"}, "gapzilla.models.IntervaledGap": {"fullname": "gapzilla.models.IntervaledGap", "modulename": "gapzilla.models", "qualname": "IntervaledGap", "kind": "class", "doc": "<p>A class to represent a gap interval on the genome with associated features on either side.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>start</strong> (int):\nStart position on the genome.</li>\n<li><strong>end</strong> (int):\nEnd position on the genome.</li>\n<li><strong>features_left</strong> (list):\nList of features on the left side of the gap.</li>\n<li><strong>features_right</strong> (list):\nList of features on the right side of the gap.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>start</strong> (int):\nStart position on the genome.</li>\n<li><strong>end</strong> (int):\nEnd position on the genome.</li>\n<li><strong>features_left</strong> (list):\nList of features on the left side of the gap.</li>\n<li><strong>features_right</strong> (list):\nList of features on the right side of the gap.</li>\n</ul>\n"}, "gapzilla.models.IntervaledGap.__init__": {"fullname": "gapzilla.models.IntervaledGap.__init__", "modulename": "gapzilla.models", "qualname": "IntervaledGap.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">features_left</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">features_right</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span>)</span>"}, "gapzilla.models.IntervaledGap.start": {"fullname": "gapzilla.models.IntervaledGap.start", "modulename": "gapzilla.models", "qualname": "IntervaledGap.start", "kind": "variable", "doc": "<p>Start position on the genome</p>\n", "annotation": ": int"}, "gapzilla.models.IntervaledGap.end": {"fullname": "gapzilla.models.IntervaledGap.end", "modulename": "gapzilla.models", "qualname": "IntervaledGap.end", "kind": "variable", "doc": "<p>End position on the genome</p>\n", "annotation": ": int"}, "gapzilla.models.IntervaledGap.features_left": {"fullname": "gapzilla.models.IntervaledGap.features_left", "modulename": "gapzilla.models", "qualname": "IntervaledGap.features_left", "kind": "variable", "doc": "<p>List</p>\n", "annotation": ": list"}, "gapzilla.models.IntervaledGap.features_right": {"fullname": "gapzilla.models.IntervaledGap.features_right", "modulename": "gapzilla.models", "qualname": "IntervaledGap.features_right", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list"}, "gapzilla.models.InsertionSite": {"fullname": "gapzilla.models.InsertionSite", "modulename": "gapzilla.models", "qualname": "InsertionSite", "kind": "class", "doc": "<p>A class to represent an insertion site on the genome.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>start</strong> (int):\nStart position on the genome.</li>\n<li><strong>end</strong> (int):\nEnd position on the genome.</li>\n<li><strong>score</strong> (int):\nScore associated with the insertion site.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>start</strong> (int):\nStart position on the genome.</li>\n<li><strong>end</strong> (int):\nEnd position on the genome.</li>\n<li><strong>score</strong> (int):\nScore associated with the insertion site.</li>\n</ul>\n"}, "gapzilla.models.InsertionSite.__init__": {"fullname": "gapzilla.models.InsertionSite.__init__", "modulename": "gapzilla.models", "qualname": "InsertionSite.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">score</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "gapzilla.models.InsertionSite.start": {"fullname": "gapzilla.models.InsertionSite.start", "modulename": "gapzilla.models", "qualname": "InsertionSite.start", "kind": "variable", "doc": "<p>Start position on the genome</p>\n", "annotation": ": int"}, "gapzilla.models.InsertionSite.end": {"fullname": "gapzilla.models.InsertionSite.end", "modulename": "gapzilla.models", "qualname": "InsertionSite.end", "kind": "variable", "doc": "<p>End position on the genome</p>\n", "annotation": ": int"}, "gapzilla.models.InsertionSite.score": {"fullname": "gapzilla.models.InsertionSite.score", "modulename": "gapzilla.models", "qualname": "InsertionSite.score", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "gapzilla.models.Hairpin": {"fullname": "gapzilla.models.Hairpin", "modulename": "gapzilla.models", "qualname": "Hairpin", "kind": "class", "doc": "<p>A class to represent a hairpin structure on the genome.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>start</strong> (int):\nStart position on the genome.</li>\n<li><strong>end</strong> (int):\nEnd position on the genome.</li>\n<li><strong>sequence</strong> (str):\nRNA sequence for the hairpin.</li>\n<li><strong>structure</strong> (str):\nHairpin structure in bracket notation.</li>\n<li><strong>mfe</strong> (float, optional):\nMinimal free energy (MFE) of the hairpin structure (default is None).</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>start</strong> (int):\nStart position on the genome.</li>\n<li><strong>end</strong> (int):\nEnd position on the genome.</li>\n<li><strong>sequence</strong> (str):\nRNA sequence for the hairpin.</li>\n<li><strong>structure</strong> (str):\nHairpin structure in bracket notation.</li>\n<li><strong>mfe</strong> (float, optional):\nMinimal free energy (MFE) of the hairpin structure (default is None).</li>\n</ul>\n"}, "gapzilla.models.Hairpin.__init__": {"fullname": "gapzilla.models.Hairpin.__init__", "modulename": "gapzilla.models", "qualname": "Hairpin.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">structure</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mfe</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "gapzilla.models.Hairpin.start": {"fullname": "gapzilla.models.Hairpin.start", "modulename": "gapzilla.models", "qualname": "Hairpin.start", "kind": "variable", "doc": "<p>Start position on the genome</p>\n", "annotation": ": int"}, "gapzilla.models.Hairpin.end": {"fullname": "gapzilla.models.Hairpin.end", "modulename": "gapzilla.models", "qualname": "Hairpin.end", "kind": "variable", "doc": "<p>End position on the genome</p>\n", "annotation": ": int"}, "gapzilla.models.Hairpin.sequence": {"fullname": "gapzilla.models.Hairpin.sequence", "modulename": "gapzilla.models", "qualname": "Hairpin.sequence", "kind": "variable", "doc": "<p>RNA sequence for hairpin</p>\n", "annotation": ": str"}, "gapzilla.models.Hairpin.structure": {"fullname": "gapzilla.models.Hairpin.structure", "modulename": "gapzilla.models", "qualname": "Hairpin.structure", "kind": "variable", "doc": "<p>Hairpin structure in bracket representation</p>\n", "annotation": ": str"}, "gapzilla.models.Hairpin.mfe": {"fullname": "gapzilla.models.Hairpin.mfe", "modulename": "gapzilla.models", "qualname": "Hairpin.mfe", "kind": "variable", "doc": "<p>Minimal free energy (MFE) of hairpin structure</p>\n", "annotation": ": float", "default_value": "None"}, "gapzilla.utils": {"fullname": "gapzilla.utils", "modulename": "gapzilla.utils", "kind": "module", "doc": "<p>Utils for time measurement and args splitting</p>\n"}, "gapzilla.utils.timeit": {"fullname": "gapzilla.utils.timeit", "modulename": "gapzilla.utils", "qualname": "timeit", "kind": "function", "doc": "<p>A decorator that logs the execution time of the wrapped function.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>func</strong> (Callable):\nThe function to be wrapped and timed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Callable</strong>: The wrapped function with added timing and logging functionality.</li>\n</ul>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nd\">@timeit</span>\n<span class=\"gp\">... </span><span class=\"k\">def</span> <span class=\"nf\">example_function</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">pass</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">example_function</span><span class=\"p\">()</span>\n<span class=\"go\">Total execution time 0:00:00</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Callable</span>:</span></span>", "funcdef": "def"}, "gapzilla.utils.list_of_strings": {"fullname": "gapzilla.utils.list_of_strings", "modulename": "gapzilla.utils", "qualname": "list_of_strings", "kind": "function", "doc": "<p>Function to split string into list of strings</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arg</strong> (str):\nThe input string to be split.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of str</strong>: A list of substrings obtained by splitting the input string at each \", \" delimiter.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"gapzilla": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 2648}, "gapzilla.config": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "gapzilla.config.OUTPUT_FILE_NAME": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 16}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 8}, "gapzilla.config.SUFFIX_FILE_NAME": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.config.MIN_GAP_LENGTH": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 5}, "gapzilla.config.MAX_GAP_LENGTH": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 5}, "gapzilla.config.MIN_FLANKS_LENGTH": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 6}, "gapzilla.config.MAX_FLANKS_LENGTH": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 6}, "gapzilla.config.MFE_THRESHOLD_HPA": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 10}, "gapzilla.config.MFE_THRESHOLD_HPT": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 10}, "gapzilla.config.BORDER_SHIFT": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 16}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 13}, "gapzilla.config.AVOID_PLOTTING": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 40}, "gapzilla.config.NUM_PROCESSES": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 15}, "gapzilla.config.VERBOSITY": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 11}, "gapzilla.config.BAR_FORMAT": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 11}, "gapzilla.config.setup_logging": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 134}, "gapzilla.feature_processing": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "gapzilla.feature_processing.create_hairpins_feature": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 83, "bases": 0, "doc": 128}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 98}, "gapzilla.feature_processing.create_insertion_sites_feature": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 133}, "gapzilla.file_processing": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "gapzilla.file_processing.create_dirs_to_output": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 74}, "gapzilla.file_processing.create_output_path": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 199}, "gapzilla.file_processing.modify_first_line": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 165}, "gapzilla.file_processing.uniquify_path": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 82}, "gapzilla.gbk_processing": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "gapzilla.gbk_processing.process_gbk": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 350, "bases": 0, "doc": 441}, "gapzilla.hairpin_processing": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "gapzilla.hairpin_processing.find_hairpins": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 153}, "gapzilla.hairpin_processing.evaluate_hairpins": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 107}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 236}, "gapzilla.hairpin_processing.process_window": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 212}, "gapzilla.hairpin_processing.find_top_hairpins": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 180, "bases": 0, "doc": 312}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 147, "bases": 0, "doc": 301}, "gapzilla.insertion_processing": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "gapzilla.insertion_processing.find_insertion_sites": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 138}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 92}, "gapzilla.interval_processing": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "gapzilla.interval_processing.split_sequence": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 117}, "gapzilla.interval_processing.merge_intervals": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 98}, "gapzilla.interval_processing.find_uncovered_intervals": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 124}, "gapzilla.interval_processing.filter_intervals_by_length": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 118}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 130}, "gapzilla.main": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 39}, "gapzilla.main.main": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 15}, "gapzilla.models": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "gapzilla.models.IntervaledFeature": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 145}, "gapzilla.models.IntervaledFeature.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 3}, "gapzilla.models.IntervaledFeature.start": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.models.IntervaledFeature.end": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.models.IntervaledFeature.feature": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "gapzilla.models.IntervaledFeature.feature_list": {"qualname": 3, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "gapzilla.models.IntervaledFeature.feature_num": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "gapzilla.models.IntervaledFeature.feature_lengths": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "gapzilla.models.IntervaledGap": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 161}, "gapzilla.models.IntervaledGap.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "gapzilla.models.IntervaledGap.start": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.models.IntervaledGap.end": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.models.IntervaledGap.features_left": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "gapzilla.models.IntervaledGap.features_right": {"qualname": 3, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "gapzilla.models.InsertionSite": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 107}, "gapzilla.models.InsertionSite.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "gapzilla.models.InsertionSite.start": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.models.InsertionSite.end": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.models.InsertionSite.score": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "gapzilla.models.Hairpin": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 171}, "gapzilla.models.Hairpin.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 3}, "gapzilla.models.Hairpin.start": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.models.Hairpin.end": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.models.Hairpin.sequence": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "gapzilla.models.Hairpin.structure": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "gapzilla.models.Hairpin.mfe": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 9}, "gapzilla.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "gapzilla.utils.timeit": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 145}, "gapzilla.utils.list_of_strings": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 59}}, "length": 77, "save": true}, "index": {"qualname": {"root": {"docs": {"gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}}, "df": 7, "s": {"docs": {"gapzilla.models.IntervaledGap.features_left": {"tf": 1}, "gapzilla.models.IntervaledGap.features_right": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config.AVOID_PLOTTING": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.NUM_PROCESSES": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 2, "p": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.config.BORDER_SHIFT": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.models.Hairpin.sequence": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.Hairpin.start": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.Hairpin.structure": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.InsertionSite.score": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.main.main": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}}, "df": 5, "s": {"docs": {"gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledGap.features_left": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}}, "df": 1}, "t": {"docs": {"gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}, "gapzilla.models.Hairpin.sequence": {"tf": 1}, "gapzilla.models.Hairpin.structure": {"tf": 1}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 8, "s": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 6}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.BORDER_SHIFT": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}}, "y": {"docs": {"gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.config.AVOID_PLOTTING": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.config.VERBOSITY": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 5}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}}, "df": 8}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.IntervaledGap.features_left": {"tf": 1}, "gapzilla.models.IntervaledGap.features_right": {"tf": 1}}, "df": 6}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.InsertionSite.score": {"tf": 1}}, "df": 5}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}}, "df": 4}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledGap.features_right": {"tf": 1}}, "df": 1}}}}}}}, "fullname": {"root": {"docs": {"gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 4, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}}, "df": 2, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config": {"tf": 1}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}, "gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.config.VERBOSITY": {"tf": 1}, "gapzilla.config.BAR_FORMAT": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.main": {"tf": 1}, "gapzilla.main.main": {"tf": 1}, "gapzilla.models": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.IntervaledGap.features_left": {"tf": 1}, "gapzilla.models.IntervaledGap.features_right": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.InsertionSite.score": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}, "gapzilla.models.Hairpin.sequence": {"tf": 1}, "gapzilla.models.Hairpin.structure": {"tf": 1}, "gapzilla.models.Hairpin.mfe": {"tf": 1}, "gapzilla.utils": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 77}}}}}}}, "b": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config": {"tf": 1}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}, "gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.config.VERBOSITY": {"tf": 1}, "gapzilla.config.BAR_FORMAT": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}}, "df": 17}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}, "gapzilla.file_processing": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 7}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}}, "df": 8, "s": {"docs": {"gapzilla.models.IntervaledGap.features_left": {"tf": 1}, "gapzilla.models.IntervaledGap.features_right": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config.AVOID_PLOTTING": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.NUM_PROCESSES": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.feature_processing": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 27}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 2, "p": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.config.BORDER_SHIFT": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.models.Hairpin.sequence": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.Hairpin.start": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.Hairpin.structure": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.InsertionSite.score": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.main": {"tf": 1}, "gapzilla.main.main": {"tf": 1.4142135623730951}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.models": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.IntervaledGap.features_left": {"tf": 1}, "gapzilla.models.IntervaledGap.features_right": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.InsertionSite.score": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}, "gapzilla.models.Hairpin.sequence": {"tf": 1}, "gapzilla.models.Hairpin.structure": {"tf": 1}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 27}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}}, "df": 5, "s": {"docs": {"gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledGap.features_left": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}}, "df": 1}, "t": {"docs": {"gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}, "gapzilla.models.Hairpin.sequence": {"tf": 1}, "gapzilla.models.Hairpin.structure": {"tf": 1}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 15, "s": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 6}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.BORDER_SHIFT": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}}, "y": {"docs": {"gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.config.AVOID_PLOTTING": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.config.VERBOSITY": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.utils": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.interval_processing": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 6, "s": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}}, "df": 8}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.IntervaledGap.features_left": {"tf": 1}, "gapzilla.models.IntervaledGap.features_right": {"tf": 1}}, "df": 6}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.insertion_processing": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.InsertionSite.score": {"tf": 1}}, "df": 5}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}}, "df": 4}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledGap.features_right": {"tf": 1}}, "df": 1}}}}}}}, "annotation": {"root": {"docs": {"gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.IntervaledGap.features_left": {"tf": 1}, "gapzilla.models.IntervaledGap.features_right": {"tf": 1}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.InsertionSite.score": {"tf": 1}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}, "gapzilla.models.Hairpin.sequence": {"tf": 1}, "gapzilla.models.Hairpin.structure": {"tf": 1}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 18, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.InsertionSite.score": {"tf": 1}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.IntervaledFeature.feature": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.models.IntervaledFeature.feature": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledGap.features_left": {"tf": 1}, "gapzilla.models.IntervaledGap.features_right": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.IntervaledFeature.feature_list": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.models.Hairpin.sequence": {"tf": 1}, "gapzilla.models.Hairpin.structure": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 1}}}}}}}, "default_value": {"root": {"0": {"docs": {"gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}}, "df": 2, "f": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}}, "1": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {"gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}}, "df": 1}, "docs": {"gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}}, "df": 1}, "docs": {"gapzilla.config.VERBOSITY": {"tf": 1}}, "df": 1}, "5": {"0": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"0": {"0": {"docs": {"gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"gapzilla.config.BORDER_SHIFT": {"tf": 1}}, "df": 1}, "docs": {"gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}}, "df": 1}, "8": {"docs": {"gapzilla.config.NUM_PROCESSES": {"tf": 1}}, "df": 1}, "9": {"docs": {"gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}}, "df": 1}, "docs": {"gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1.4142135623730951}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1.4142135623730951}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1.4142135623730951}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.config.BAR_FORMAT": {"tf": 1.4142135623730951}}, "df": 7, "x": {"2": {"7": {"docs": {"gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1.4142135623730951}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1.4142135623730951}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1.4142135623730951}, "gapzilla.config.BAR_FORMAT": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, ":": {"3": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1, ":": {"1": {"0": {"0": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 1}}}}}}, "signature": {"root": {"0": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 2}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 4}, "1": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}, "docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 2}, "docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}, "2": {"0": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}, "5": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}, "docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}, "3": {"9": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.449489742783178}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"0": {"0": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 2}, "docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}, "8": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}, "9": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}, "docs": {"gapzilla.config.setup_logging": {"tf": 4}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 8.18535277187245}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 6.557438524302}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 6.557438524302}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 5}, "gapzilla.file_processing.create_output_path": {"tf": 8.888194417315589}, "gapzilla.file_processing.modify_first_line": {"tf": 6.48074069840786}, "gapzilla.file_processing.uniquify_path": {"tf": 5.830951894845301}, "gapzilla.gbk_processing.process_gbk": {"tf": 16.3707055437449}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 7.211102550927978}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 6.48074069840786}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 9.486832980505138}, "gapzilla.hairpin_processing.process_window": {"tf": 6.6332495807108}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 11.958260743101398}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 10.723805294763608}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 8.06225774829855}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 6.557438524302}, "gapzilla.interval_processing.split_sequence": {"tf": 8.94427190999916}, "gapzilla.interval_processing.merge_intervals": {"tf": 6.557438524302}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 7.810249675906654}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 7.810249675906654}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 6.782329983125268}, "gapzilla.main.main": {"tf": 3}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 6.082762530298219}, "gapzilla.models.IntervaledGap.__init__": {"tf": 6}, "gapzilla.models.InsertionSite.__init__": {"tf": 5.291502622129181}, "gapzilla.models.Hairpin.__init__": {"tf": 7.416198487095663}, "gapzilla.utils.timeit": {"tf": 4}, "gapzilla.utils.list_of_strings": {"tf": 4.58257569495584}}, "df": 29, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1.4142135623730951}, "gapzilla.models.InsertionSite.__init__": {"tf": 1.7320508075688772}, "gapzilla.models.Hairpin.__init__": {"tf": 1.4142135623730951}}, "df": 14, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 6}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.models.IntervaledFeature.__init__": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.main.main": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}}, "df": 9, "s": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}, "t": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1.4142135623730951}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 19}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 2}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledGap.__init__": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 1, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 16}}}}}, "s": {"docs": {"gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 16}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 3}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1}, "s": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 5}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 2.23606797749979}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.__init__": {"tf": 1.4142135623730951}, "gapzilla.utils.list_of_strings": {"tf": 1.4142135623730951}}, "df": 14, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 2}}, "df": 4, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 1}}, "df": 4}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 1}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.InsertionSite.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.utils.timeit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}}, "df": 7}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 5, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.models.IntervaledFeature.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.IntervaledFeature.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 1}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1}, "gapzilla.models.InsertionSite.__init__": {"tf": 1}, "gapzilla.models.Hairpin.__init__": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledGap.__init__": {"tf": 1}}, "df": 1}}}}}}}, "bases": {"root": {"docs": {}, "df": 0}}, "doc": {"root": {"0": {"docs": {"gapzilla": {"tf": 2.23606797749979}, "gapzilla.config.VERBOSITY": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 8, "f": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, ":": {"0": {"0": {"docs": {}, "df": 0, ":": {"0": {"0": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "1": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"gapzilla": {"tf": 1}}, "df": 1}, "docs": {"gapzilla": {"tf": 1}}, "df": 1}, "5": {"0": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 2}, "docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 3}, "docs": {"gapzilla": {"tf": 2.449489742783178}, "gapzilla.config.VERBOSITY": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 6, "e": {"6": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "2": {"0": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 2}, "5": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}, "docs": {"gapzilla": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 3}, "3": {"9": {"docs": {"gapzilla": {"tf": 2}}, "df": 1}, "docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 2}, "4": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}, "5": {"0": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"0": {"0": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "5": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 3}, "docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 2}, "8": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "9": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 4}, "docs": {"gapzilla": {"tf": 39.370039370059054}, "gapzilla.config": {"tf": 1.7320508075688772}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1.4142135623730951}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1.4142135623730951}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1.4142135623730951}, "gapzilla.config.MIN_GAP_LENGTH": {"tf": 1.4142135623730951}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1.4142135623730951}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1.4142135623730951}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1.4142135623730951}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1.4142135623730951}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1.4142135623730951}, "gapzilla.config.BORDER_SHIFT": {"tf": 1.4142135623730951}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1.7320508075688772}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1.4142135623730951}, "gapzilla.config.NUM_PROCESSES": {"tf": 1.4142135623730951}, "gapzilla.config.VERBOSITY": {"tf": 1.7320508075688772}, "gapzilla.config.BAR_FORMAT": {"tf": 1.7320508075688772}, "gapzilla.config.setup_logging": {"tf": 6.48074069840786}, "gapzilla.feature_processing": {"tf": 2.23606797749979}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 6.48074069840786}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 5.0990195135927845}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 7.14142842854285}, "gapzilla.file_processing": {"tf": 1.7320508075688772}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 5.196152422706632}, "gapzilla.file_processing.create_output_path": {"tf": 7.211102550927978}, "gapzilla.file_processing.modify_first_line": {"tf": 6.782329983125268}, "gapzilla.file_processing.uniquify_path": {"tf": 5.0990195135927845}, "gapzilla.gbk_processing": {"tf": 1.7320508075688772}, "gapzilla.gbk_processing.process_gbk": {"tf": 10.63014581273465}, "gapzilla.hairpin_processing": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 7.0710678118654755}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 6.164414002968976}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 8.660254037844387}, "gapzilla.hairpin_processing.process_window": {"tf": 7.615773105863909}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 9.1104335791443}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 8.94427190999916}, "gapzilla.insertion_processing": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 7.3484692283495345}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 6.164414002968976}, "gapzilla.interval_processing": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 6.48074069840786}, "gapzilla.interval_processing.merge_intervals": {"tf": 6}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 6.6332495807108}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 6.48074069840786}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 6.48074069840786}, "gapzilla.main": {"tf": 2}, "gapzilla.main.main": {"tf": 2.449489742783178}, "gapzilla.models": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature": {"tf": 7.937253933193772}, "gapzilla.models.IntervaledFeature.__init__": {"tf": 1.7320508075688772}, "gapzilla.models.IntervaledFeature.start": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.end": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledGap": {"tf": 7.937253933193772}, "gapzilla.models.IntervaledGap.__init__": {"tf": 1.7320508075688772}, "gapzilla.models.IntervaledGap.start": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledGap.end": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledGap.features_left": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledGap.features_right": {"tf": 1.7320508075688772}, "gapzilla.models.InsertionSite": {"tf": 7.14142842854285}, "gapzilla.models.InsertionSite.__init__": {"tf": 1.7320508075688772}, "gapzilla.models.InsertionSite.start": {"tf": 1.4142135623730951}, "gapzilla.models.InsertionSite.end": {"tf": 1.4142135623730951}, "gapzilla.models.InsertionSite.score": {"tf": 1.7320508075688772}, "gapzilla.models.Hairpin": {"tf": 8.660254037844387}, "gapzilla.models.Hairpin.__init__": {"tf": 1.7320508075688772}, "gapzilla.models.Hairpin.start": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.end": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.sequence": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.structure": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.mfe": {"tf": 1.4142135623730951}, "gapzilla.utils": {"tf": 1.4142135623730951}, "gapzilla.utils.timeit": {"tf": 9.539392014169456}, "gapzilla.utils.list_of_strings": {"tf": 5}}, "df": 77, "a": {"docs": {"gapzilla": {"tf": 3.4641016151377544}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 2.6457513110645907}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 2.8284271247461903}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 2.449489742783178}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1.7320508075688772}, "gapzilla.file_processing.uniquify_path": {"tf": 2.23606797749979}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.process_window": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.merge_intervals": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 2.23606797749979}, "gapzilla.models.IntervaledFeature": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledGap": {"tf": 1.4142135623730951}, "gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}, "gapzilla.utils.timeit": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 29, "n": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.models.InsertionSite": {"tf": 1}}, "df": 10, "d": {"docs": {"gapzilla": {"tf": 4.123105625617661}, "gapzilla.config": {"tf": 1}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.7320508075688772}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.7320508075688772}, "gapzilla.file_processing": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.process_window": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2.449489742783178}, "gapzilla.insertion_processing": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.interval_processing": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.merge_intervals": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.main": {"tf": 1.4142135623730951}, "gapzilla.main.main": {"tf": 1}, "gapzilla.utils": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1.4142135623730951}}, "df": 32}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 3, "d": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1}}, "df": 13}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2.23606797749979}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 8}, "g": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.main": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.utils": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}}, "df": 5}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 2}}}}, "p": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "s": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.merge_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 3.1622776601683795}, "gapzilla.config.AVOID_PLOTTING": {"tf": 2}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 6}, "s": {"docs": {}, "df": 0, "o": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}}, "df": 5, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 2}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 2}}, "df": 8}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.VERBOSITY": {"tf": 1}}, "df": 2}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 2}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.IntervaledGap": {"tf": 2.23606797749979}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"gapzilla": {"tf": 3.1622776601683795}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 2}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 5}}}}, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.config": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 3, "d": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 4}}}, "y": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"gapzilla": {"tf": 2}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}, "q": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.feature_processing": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.7320508075688772}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 2}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.7320508075688772}, "gapzilla.models.IntervaledFeature": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 3.1622776601683795}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.449489742783178}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 2}, "gapzilla.models.Hairpin": {"tf": 2}, "gapzilla.models.Hairpin.sequence": {"tf": 1}}, "df": 10, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 2.449489742783178}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.split_sequence": {"tf": 1.7320508075688772}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 7}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 12}}}, "y": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.config.VERBOSITY": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.utils.list_of_strings": {"tf": 1.4142135623730951}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.utils": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 2}, "gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 2}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 2}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 2}, "gapzilla.models.Hairpin.start": {"tf": 1}}, "df": 20, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 2.23606797749979}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin": {"tf": 2}, "gapzilla.utils.list_of_strings": {"tf": 1.4142135623730951}}, "df": 14, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 2.6457513110645907}, "gapzilla.models.Hairpin.structure": {"tf": 1}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 8, "s": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 2}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 2}}, "df": 5, "s": {"docs": {"gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.7320508075688772}}, "df": 3}}}, "e": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.BAR_FORMAT": {"tf": 1}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.main": {"tf": 1.4142135623730951}, "gapzilla.models": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 2}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.models": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 2}}, "df": 1, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {"gapzilla": {"tf": 3.872983346207417}, "gapzilla.config.VERBOSITY": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 7}}}}}, "y": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {"gapzilla": {"tf": 3.7416573867739413}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 2}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 11}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"gapzilla.config.setup_logging": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 3, "d": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.utils": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 4.123105625617661}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 3}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 3}, "gapzilla.models.Hairpin": {"tf": 2}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 11}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 2, "o": {"docs": {"gapzilla": {"tf": 6}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1.7320508075688772}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1.4142135623730951}, "gapzilla.feature_processing": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 2}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 2.23606797749979}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 3.7416573867739413}, "gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.process_window": {"tf": 2.449489742783178}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2.23606797749979}, "gapzilla.insertion_processing": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.interval_processing": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1.4142135623730951}}, "df": 39, "m": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2.23606797749979}}, "df": 4}, "o": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 4.58257569495584}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1.4142135623730951}, "gapzilla.config.BAR_FORMAT": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 2.6457513110645907}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.7320508075688772}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.7320508075688772}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 2.23606797749979}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1.7320508075688772}, "gapzilla.file_processing.create_output_path": {"tf": 4.242640687119285}, "gapzilla.file_processing.modify_first_line": {"tf": 4.242640687119285}, "gapzilla.file_processing.uniquify_path": {"tf": 2}, "gapzilla.gbk_processing.process_gbk": {"tf": 3.7416573867739413}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 3.4641016151377544}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 3.3166247903554}, "gapzilla.hairpin_processing.process_window": {"tf": 4.123105625617661}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 4.242640687119285}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 3.605551275463989}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 2.449489742783178}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 2.449489742783178}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 2.23606797749979}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 2.449489742783178}, "gapzilla.main": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 2.8284271247461903}, "gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 3.605551275463989}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 2.6457513110645907}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 3}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 2}, "gapzilla.utils.list_of_strings": {"tf": 1.4142135623730951}}, "df": 40, "n": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.main": {"tf": 1}}, "df": 4}, "y": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 3.4641016151377544}, "gapzilla.config": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.main": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}}, "df": 9}, "n": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 4, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 4.242640687119285}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 3}}, "df": 8}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 2.449489742783178}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla.feature_processing": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.main": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}}, "df": 3, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}, "q": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.BAR_FORMAT": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.utils": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.interval_processing": {"tf": 1}, "gapzilla.main": {"tf": 1}, "gapzilla.main.main": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}, "gapzilla.main": {"tf": 1}}, "df": 5}, "d": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.main": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "d": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.gbk_processing.process_gbk": {"tf": 2}, "gapzilla.hairpin_processing.process_window": {"tf": 1}}, "df": 6}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.BAR_FORMAT": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 3}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 3.605551275463989}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla": {"tf": 3.872983346207417}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1.7320508075688772}, "gapzilla.file_processing.create_output_path": {"tf": 3}, "gapzilla.file_processing.modify_first_line": {"tf": 2}, "gapzilla.file_processing.uniquify_path": {"tf": 2.449489742783178}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.23606797749979}}, "df": 7, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.main": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 30}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.main.main": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "y": {"docs": {"gapzilla.main": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 2.449489742783178}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "p": {"3": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature": {"tf": 2}, "gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 2}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 2}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 2}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}}, "df": 16, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "s": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, ":": {"3": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.23606797749979}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 1, "d": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 2}, "gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 2.23606797749979}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 2.23606797749979}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 2.23606797749979}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}}, "df": 13}, "i": {"docs": {}, "df": 0, "c": {"docs": {"gapzilla.models.IntervaledFeature": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla": {"tf": 3}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.feature_processing": {"tf": 1}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.main": {"tf": 1.4142135623730951}, "gapzilla.main.main": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla": {"tf": 4.47213595499958}, "gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledGap": {"tf": 2.23606797749979}}, "df": 10, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla": {"tf": 3.1622776601683795}}, "df": 1}}}}}, "s": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.6457513110645907}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.interval_processing": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.7320508075688772}}, "df": 8}}}, "t": {"docs": {"gapzilla": {"tf": 2.8284271247461903}, "gapzilla.utils.timeit": {"tf": 2.449489742783178}}, "df": 2}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"gapzilla": {"tf": 2.23606797749979}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 4.795831523312719}, "gapzilla.config": {"tf": 1}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_output_path": {"tf": 3.3166247903554}, "gapzilla.file_processing.modify_first_line": {"tf": 2.6457513110645907}, "gapzilla.file_processing.uniquify_path": {"tf": 2.23606797749979}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 3.4641016151377544}, "gapzilla.main": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.feature_processing": {"tf": 1}, "gapzilla.file_processing": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.SUFFIX_FILE_NAME": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1.7320508075688772}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}}, "df": 6}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.config": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.7320508075688772}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.main": {"tf": 1.7320508075688772}}, "df": 13}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 10}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 3.1622776601683795}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "r": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.config.BAR_FORMAT": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.449489742783178}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.449489742783178}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.sequence": {"tf": 1}, "gapzilla.utils": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}}, "df": 18, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.BAR_FORMAT": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}}, "df": 5}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 3.7416573867739413}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 2}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1.7320508075688772}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.main": {"tf": 1}, "gapzilla.main.main": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 2.23606797749979}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 12, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.feature_processing": {"tf": 1}, "gapzilla.file_processing": {"tf": 1}, "gapzilla.insertion_processing": {"tf": 1}, "gapzilla.interval_processing": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1}}, "l": {"docs": {"gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 2.23606797749979}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature": {"tf": 2.23606797749979}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 2}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 2}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 2}, "gapzilla.models.IntervaledFeature": {"tf": 2}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 3}}, "df": 10}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}, "d": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.models": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.structure": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}}, "df": 14, "s": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 2.23606797749979}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 2}, "gapzilla.models.InsertionSite": {"tf": 1.7320508075688772}}, "df": 9, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 2.23606797749979}}, "df": 3}}}}}}}, "s": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 2.6457513110645907}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}}, "df": 2, "s": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "{": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature": {"tf": 2.449489742783178}, "gapzilla.models.IntervaledGap": {"tf": 2}, "gapzilla.models.InsertionSite": {"tf": 2.449489742783178}, "gapzilla.models.Hairpin": {"tf": 2}}, "df": 14, "o": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature": {"tf": 2}, "gapzilla.models.IntervaledGap": {"tf": 1}}, "df": 6, "s": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.interval_processing": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 2}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.7320508075688772}}, "df": 4, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}}, "df": 6}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 2.23606797749979}, "gapzilla.file_processing.modify_first_line": {"tf": 1.7320508075688772}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.main.main": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1.4142135623730951}}, "df": 8}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}, "d": {"docs": {"gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.main": {"tf": 1}, "gapzilla.main.main": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"gapzilla": {"tf": 3.605551275463989}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 3.4641016151377544}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.449489742783178}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}}, "df": 12}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"gapzilla": {"tf": 2.23606797749979}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 2}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 11}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.main": {"tf": 1}}, "df": 5, "s": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1.7320508075688772}}, "df": 2, "n": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla": {"tf": 2.23606797749979}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.7320508075688772}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.sequence": {"tf": 1}}, "df": 12}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}, "s": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 2}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.models.Hairpin.structure": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 24}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}, "s": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 2}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 2}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.7320508075688772}, "gapzilla.utils.timeit": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 2.6457513110645907}, "gapzilla.gbk_processing.process_gbk": {"tf": 2}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 3}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 2.8284271247461903}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.process_window": {"tf": 2.449489742783178}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2.6457513110645907}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 2}, "gapzilla.models.Hairpin": {"tf": 2.6457513110645907}, "gapzilla.models.Hairpin.sequence": {"tf": 1}, "gapzilla.models.Hairpin.structure": {"tf": 1}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 14, "s": {"docs": {"gapzilla": {"tf": 4.47213595499958}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPT": {"tf": 1}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1.4142135623730951}, "gapzilla.config.AVOID_PLOTTING": {"tf": 2.449489742783178}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.gbk_processing": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2.8284271247461903}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 3}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 3.4641016151377544}}, "df": 14}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}}, "df": 9}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.insertion_processing": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.config": {"tf": 1}, "gapzilla.main": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla": {"tf": 3.1622776601683795}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 6}, "t": {"docs": {"gapzilla": {"tf": 3.4641016151377544}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla": {"tf": 3.872983346207417}}, "df": 1}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 3}, "gapzilla.config": {"tf": 1}, "gapzilla.main": {"tf": 1.4142135623730951}}, "df": 3, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 2.23606797749979}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.main": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.main": {"tf": 1}, "gapzilla.main.main": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 2}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.insertion_processing": {"tf": 1}}, "df": 7, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.main": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 2.23606797749979}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 1, "d": {"docs": {"gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.utils.timeit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.main": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.models.IntervaledFeature": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.feature": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "u": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"gapzilla": {"tf": 2}}, "df": 1, "r": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 2}}, "df": 1}}}}, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {}, "df": 0, "v": {"docs": {"gapzilla": {"tf": 2}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.MFE_THRESHOLD_HPA": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.mfe": {"tf": 1}}, "df": 10}}}}, "d": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 2}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 2}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 2}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 2}, "gapzilla.models.Hairpin.end": {"tf": 1}}, "df": 20}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.utils.timeit": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.config.setup_logging": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.7320508075688772}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2.23606797749979}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.7320508075688772}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 17}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}}, "df": 4, "d": {"docs": {"gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.models.IntervaledGap": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"gapzilla": {"tf": 2.449489742783178}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {"gapzilla": {"tf": 3}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1.7320508075688772}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_output_path": {"tf": 2.23606797749979}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1.4142135623730951}, "gapzilla.utils.timeit": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 19, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.main": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "x": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 9}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 2.449489742783178}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.BAR_FORMAT": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 3, ":": {"1": {"0": {"0": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.feature_processing": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}}, "df": 1}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.structure": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}}}, "l": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}, "p": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 2}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.config.setup_logging": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1.7320508075688772}, "gapzilla.main": {"tf": 1}, "gapzilla.main.main": {"tf": 1}}, "df": 4, "s": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 2.449489742783178}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 2.449489742783178}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 2.23606797749979}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 2.449489742783178}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 2.449489742783178}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 2}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.merge_intervals": {"tf": 2.449489742783178}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 2}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 2.23606797749979}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 2.23606797749979}, "gapzilla.models.IntervaledFeature": {"tf": 2.23606797749979}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 2.8284271247461903}, "gapzilla.models.IntervaledGap.features_left": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1.7320508075688772}}, "df": 26, "s": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla": {"tf": 5.385164807134504}, "gapzilla.config.MIN_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MAX_GAP_LENGTH": {"tf": 1}, "gapzilla.config.MIN_FLANKS_LENGTH": {"tf": 1}, "gapzilla.config.MAX_FLANKS_LENGTH": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.8284271247461903}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 2.23606797749979}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 2.23606797749979}}, "df": 8, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1.4142135623730951}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}}, "df": 6}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 2}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.config.setup_logging": {"tf": 2.8284271247461903}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 2, "s": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.file_processing": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.BORDER_SHIFT": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "f": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 4}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 3.605551275463989}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.utils.timeit": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.HAIRPIN_SIMILARITY_THRES": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla.config": {"tf": 1}, "gapzilla.feature_processing": {"tf": 1}, "gapzilla.models": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.models": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.config.VERBOSITY": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 2.23606797749979}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla": {"tf": 1.7320508075688772}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}}, "df": 5}}, "n": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 2}}}, "o": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 2.449489742783178}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1.7320508075688772}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}}, "df": 9}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.7320508075688772}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 1.4142135623730951}, "gapzilla.utils.timeit": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1.7320508075688772}}, "df": 8}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 3}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.449489742783178}}, "df": 3, "s": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.utils.timeit": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 5, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}, "d": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.models": {"tf": 1}}, "df": 3}, "r": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "s": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {"gapzilla.config": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.utils": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"gapzilla": {"tf": 2.6457513110645907}}, "df": 1, "o": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 2.6457513110645907}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}}, "df": 9, "e": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.modify_first_line": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 4}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_output_path": {"tf": 3}, "gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.23606797749979}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}}, "df": 9}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla.gbk_processing.process_gbk": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 4.358898943540674}, "gapzilla.config.OUTPUT_FILE_NAME": {"tf": 1}, "gapzilla.config.PATH_TO_OUTPUT_FOLDER": {"tf": 1}, "gapzilla.config.VERBOSITY": {"tf": 1}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 3.3166247903554}, "gapzilla.file_processing.modify_first_line": {"tf": 2}, "gapzilla.gbk_processing.process_gbk": {"tf": 2.8284271247461903}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"gapzilla": {"tf": 2.23606797749979}, "gapzilla.config.AVOID_PLOTTING": {"tf": 1}, "gapzilla.config.NUM_PROCESSES": {"tf": 1}, "gapzilla.config.VERBOSITY": {"tf": 1}, "gapzilla.config.BAR_FORMAT": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 2.8284271247461903}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 2.6457513110645907}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 2.8284271247461903}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 2}, "gapzilla.gbk_processing.process_gbk": {"tf": 3}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2.8284271247461903}, "gapzilla.hairpin_processing.process_window": {"tf": 2.6457513110645907}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.8284271247461903}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 3.3166247903554}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 2.449489742783178}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 2}, "gapzilla.interval_processing.split_sequence": {"tf": 2}, "gapzilla.interval_processing.merge_intervals": {"tf": 2.23606797749979}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 2.449489742783178}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 2.23606797749979}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 2.449489742783178}, "gapzilla.main": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 2.449489742783178}, "gapzilla.models.IntervaledFeature.feature_list": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_num": {"tf": 1}, "gapzilla.models.IntervaledFeature.feature_lengths": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 2.8284271247461903}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}, "gapzilla.models.Hairpin.mfe": {"tf": 1}, "gapzilla.utils.timeit": {"tf": 1}, "gapzilla.utils.list_of_strings": {"tf": 1.7320508075688772}}, "df": 34}, "n": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1}, "gapzilla.gbk_processing.process_gbk": {"tf": 1}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_length": {"tf": 1}, "gapzilla.interval_processing.filter_intervals_by_flanking_legth": {"tf": 1}, "gapzilla.models.IntervaledFeature": {"tf": 2}, "gapzilla.models.IntervaledFeature.start": {"tf": 1}, "gapzilla.models.IntervaledFeature.end": {"tf": 1}, "gapzilla.models.IntervaledGap": {"tf": 3.1622776601683795}, "gapzilla.models.IntervaledGap.start": {"tf": 1}, "gapzilla.models.IntervaledGap.end": {"tf": 1}, "gapzilla.models.InsertionSite": {"tf": 2.23606797749979}, "gapzilla.models.InsertionSite.start": {"tf": 1}, "gapzilla.models.InsertionSite.end": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 2.23606797749979}, "gapzilla.models.Hairpin.start": {"tf": 1}, "gapzilla.models.Hairpin.end": {"tf": 1}}, "df": 25, "e": {"docs": {"gapzilla": {"tf": 2}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 2, "s": {"docs": {"gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"gapzilla": {"tf": 1.4142135623730951}, "gapzilla.config.setup_logging": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"gapzilla": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 1}, "gapzilla.file_processing.create_output_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 3.7416573867739413}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 2.23606797749979}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1}, "gapzilla.models.Hairpin": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"gapzilla": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 2}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.merge_intervals": {"tf": 1}}, "df": 4}}}}}}}}}}, "r": {"docs": {"gapzilla.config.setup_logging": {"tf": 1}, "gapzilla.feature_processing.create_hairpins_feature": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1.7320508075688772}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.7320508075688772}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.interval_processing.split_sequence": {"tf": 1.4142135623730951}, "gapzilla.main": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"gapzilla.file_processing.uniquify_path": {"tf": 1}, "gapzilla.hairpin_processing.process_window": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1}, "gapzilla.interval_processing.split_sequence": {"tf": 1}}, "df": 5}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_dirs_to_output": {"tf": 1}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1}, "gapzilla.interval_processing.find_uncovered_intervals": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"gapzilla.feature_processing.create_hairpins_feature": {"tf": 2}, "gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1.7320508075688772}, "gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins": {"tf": 1}, "gapzilla.hairpin_processing.evaluate_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.merge_similar_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.process_window": {"tf": 1}, "gapzilla.hairpin_processing.find_top_hairpins": {"tf": 1.4142135623730951}, "gapzilla.hairpin_processing.find_hairpins_in_subseqs": {"tf": 1.4142135623730951}, "gapzilla.insertion_processing.find_insertion_sites": {"tf": 1.7320508075688772}, "gapzilla.insertion_processing.find_overlapping_insertion_sites": {"tf": 1.4142135623730951}}, "df": 11}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.utils.list_of_strings": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"gapzilla.file_processing.create_dirs_to_output": {"tf": 1.4142135623730951}, "gapzilla.file_processing.create_output_path": {"tf": 1.7320508075688772}, "gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}, "gapzilla.file_processing.uniquify_path": {"tf": 1.4142135623730951}, "gapzilla.gbk_processing.process_gbk": {"tf": 1.4142135623730951}}, "df": 5}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"gapzilla": {"tf": 3.1622776601683795}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"gapzilla.feature_processing.create_uncovered_intervals_feature": {"tf": 1}}, "df": 1, "s": {"docs": {"gapzilla.feature_processing.create_insertion_sites_feature": {"tf": 1}}, "df": 1}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"gapzilla.file_processing.modify_first_line": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();